//
// Copyright © 2021 Audinate Pty Ltd ACN 120 828 006 (Audinate). All rights reserved.
//
//
// 1.	Subject to the terms and conditions of this Licence, Audinate hereby grants you a worldwide, non-exclusive,
//		no-charge, royalty free licence to copy, modify, merge, publish, redistribute, sublicense, and/or sell the
//		Software, provided always that the following conditions are met:
//		1.1.	the Software must accompany, or be incorporated in a licensed Audinate product, solution or offering
//				or be used in a product, solution or offering which requires the use of another licensed Audinate
//				product, solution or offering. The Software is not for use as a standalone product without any
//				reference to Audinate's products;
//		1.2.	the Software is provided as part of example code and as guidance material only without any warranty
//				or expectation of performance, compatibility, support, updates or security; and
//		1.3.	the above copyright notice and this License must be included in all copies or substantial portions
//				of the Software, and all derivative works of the Software, unless the copies or derivative works are
//				solely in the form of machine-executable object code generated by the source language processor.
//
// 2.	TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//		EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
//		PURPOSE AND NONINFRINGEMENT.
//
// 3.	TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL AUDINATE BE LIABLE ON ANY LEGAL THEORY
//		(INCLUDING, WITHOUT LIMITATION, IN AN ACTION FOR BREACH OF CONTRACT, NEGLIGENCE OR OTHERWISE) FOR ANY CLAIM,
//		LOSS, DAMAGES OR OTHER LIABILITY HOWSOEVER INCURRED.  WITHOUT LIMITING THE SCOPE OF THE PREVIOUS SENTENCE THE
//		EXCLUSION OF LIABILITY SHALL INCLUDE: LOSS OF PRODUCTION OR OPERATION TIME, LOSS, DAMAGE OR CORRUPTION OF
//		DATA OR RECORDS; OR LOSS OF ANTICIPATED SAVINGS, OPPORTUNITY, REVENUE, PROFIT OR GOODWILL, OR OTHER ECONOMIC
//		LOSS; OR ANY SPECIAL, INCIDENTAL, INDIRECT, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES, ARISING OUT OF OR
//		IN CONNECTION WITH THIS AGREEMENT, ACCESS OF THE SOFTWARE OR ANY OTHER DEALINGS WITH THE SOFTWARE, EVEN IF
//		AUDINATE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH CLAIM, LOSS, DAMAGES OR OTHER LIABILITY.
//
// 4.	APPLICABLE LEGISLATION SUCH AS THE AUSTRALIAN CONSUMER LAW MAY APPLY REPRESENTATIONS, WARRANTIES, OR CONDITIONS,
//		OR IMPOSES OBLIGATIONS OR LIABILITY ON AUDINATE THAT CANNOT BE EXCLUDED, RESTRICTED OR MODIFIED TO THE FULL
//		EXTENT SET OUT IN THE EXPRESS TERMS OF THIS CLAUSE ABOVE "CONSUMER GUARANTEES".	 TO THE EXTENT THAT SUCH CONSUMER
//		GUARANTEES CONTINUE TO APPLY, THEN TO THE FULL EXTENT PERMITTED BY THE APPLICABLE LEGISLATION, THE LIABILITY OF
//		AUDINATE UNDER THE RELEVANT CONSUMER GUARANTEE IS LIMITED (WHERE PERMITTED AT AUDINATE'S OPTION) TO ONE OF
//		FOLLOWING REMEDIES OR SUBSTANTIALLY EQUIVALENT REMEDIES:
//		4.1.	THE REPLACEMENT OF THE SOFTWARE, THE SUPPLY OF EQUIVALENT SOFTWARE, OR SUPPLYING RELEVANT SERVICES AGAIN;
//		4.2.	THE REPAIR OF THE SOFTWARE;
//		4.3.	THE PAYMENT OF THE COST OF REPLACING THE SOFTWARE, OF ACQUIRING EQUIVALENT SOFTWARE, HAVING THE RELEVANT
//				SERVICES SUPPLIED AGAIN, OR HAVING THE SOFTWARE REPAIRED.
//
// 5.	This License does not grant any permissions or rights to use the trade marks (whether registered or unregistered),
//		the trade names, or product names of Audinate.
//
// 6.	If you choose to redistribute or sell the Software you may elect to offer support, maintenance, warranties,
//		indemnities or other liability obligations or rights consistent with this License. However, you may only act on
//		your own behalf and must not bind Audinate. You agree to indemnify and hold harmless Audinate, and its affiliates
//		form any liability claimed or incurred by reason of your offering or accepting any additional warranty or additional
//		liability.
//
//  DalAppBase.hpp
//  DAL example common DAL application code.

#include "juce_audio_devices/juce_audio_devices.h"
#include "juce_audio_devices/audio_io/juce_SampleRateHelpers.cpp"
#include "audinate/dal/Common.hpp"
#include "audinate/dal/DAL.hpp"
#include "audinate/dal/Instance.hpp"
#include "audinate/dal/Audio.hpp"
#include "audinate/dal/Connections.hpp"
#include <string>
#include <algorithm>
#include <iomanip>
#include <fstream>
#include <iostream>
#include <assert.h>
#include <signal.h>
#include <sstream>
#ifndef _WIN32
#include <unistd.h>
#endif

namespace DAL {

	class DalConfig : public Audinate::DAL::InstanceConfig { public: DalConfig(); };

	//
	// Type for function that implements audio transfer between the app and DAL.
	//
	typedef std::function<void(const Audinate::DAL::AudioProperties& properties,
		const Audinate::DAL::AudioTransferParameters& params,
		unsigned int numChannels, unsigned int latencySamples)> DalAppTransferFn;

	class DalAppBase
	{
	public:
		DalAppBase(const std::string appName, const std::string modelName,
			const Audinate::DAL::Id64& modelId) :
			mAppName(appName), mModelName(modelName), mModelId(modelId),
			mInstance(), mTransferFn()
		{}
		virtual ~DalAppBase() {}
		virtual int init(const unsigned char* access_token, DalConfig instanceConfig, bool monitor);
		virtual void run();
		virtual void stop();
		virtual bool getAudioProperties(Audinate::DAL::AudioProperties& properties);
		virtual bool isDeviceActivated();

		std::shared_ptr<Audinate::DAL::DAL> getDal() { return mDal; };
		bool isSupportedSampleRate(uint32_t sampleRate) const;
		const Audinate::DAL::InstanceConfig& getConfig() { return mConfig; }
		void setTransferFn(DalAppTransferFn fn) { mTransferFn = fn; }
		std::string toString(const Audinate::DAL::Id64& id64);

	protected:
		virtual void restartDalInstance();

	private:
		const std::string mAppName;
		const std::string mModelName;
		const Audinate::DAL::Id64& mModelId;

		Audinate::DAL::InstanceConfig mConfig;
		std::shared_ptr<Audinate::DAL::DAL> mDal;
		std::shared_ptr<Audinate::DAL::Instance> mInstance;
		DalAppTransferFn mTransferFn;
		void stopDalInstance();
		void resetDalInstance();
		void setupAudioTransfer();
	};
}
//
// Copyright © 2021 Audinate Pty Ltd ACN 120 828 006 (Audinate). All rights reserved.
//
